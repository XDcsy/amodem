name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # 允许手动触发
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      run: |
        python -m pip install --upgrade pip setuptools
        pip install pytest pytest-cov mock pycodestyle coverage pylint
        pip install -e .

    - name: Lint
      run: |
        pycodestyle amodem/ scripts/
        pylint --extension-pkg-whitelist=numpy --reports=no amodem --rcfile .pylintrc

    - name: Test with pytest
      run: |
        pytest -v --cov=amodem

  windows-build:
    runs-on: windows-latest
    # 移除 needs: build，使两个任务完全独立
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools numpy pyinstaller
    
    - name: Install package
      run: |
        pip install -e .
    
    - name: Create spec file
      run: |
        echo "# -*- mode: python -*-
        block_cipher = None

        a = Analysis(['amodem_launcher.py'],
                    pathex=['.'],
                    binaries=[],
                    datas=[('amodem', 'amodem')],
                    hiddenimports=[
                        'numpy.random.common',
                        'numpy.random.bounded_integers',
                        'numpy.random.entropy',
                        'amodem.async_reader',
                        'amodem.audio',
                        'amodem.calib',
                        'amodem.main',
                        'amodem.config',
                        'amodem.dsp',
                        'amodem.stream',
                        'amodem.detect',
                        'amodem.recv',
                        'amodem.send'
                    ],
                    hookspath=[],
                    runtime_hooks=[],
                    excludes=['argcomplete'],
                    win_no_prefer_redirects=False,
                    win_private_assemblies=False,
                    cipher=block_cipher,
                    noarchive=False)

        pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

        exe = EXE(pyz,
                  a.scripts,
                  a.binaries,
                  a.zipfiles,
                  a.datas,
                  [],
                  name='amodem',
                  debug=False,
                  bootloader_ignore_signals=False,
                  strip=False,
                  upx=True,
                  upx_exclude=[],
                  runtime_tmpdir=None,
                  console=True)" > amodem.spec

    - name: Build executable
      run: |
        pyinstaller amodem.spec
    
    - name: Create README
      run: |
        echo "Audio Modem (amodem) - Windows Executable`n" > dist/README.txt
        echo "Usage:`n" >> dist/README.txt
        echo "1. Download portaudio DLL (64-bit) from: http://www.portaudio.com/download.html`n" >> dist/README.txt
        echo "2. Save the DLL file anywhere`n" >> dist/README.txt
        echo "3. Run the program with DLL path, for example:`n" >> dist/README.txt
        echo "   Send file:`n" >> dist/README.txt
        echo "   amodem.exe send -i input.file -l path/to/portaudio.dll`n" >> dist/README.txt
        echo "   Receive file:`n" >> dist/README.txt
        echo "   amodem.exe recv -o output.file -l path/to/portaudio.dll`n" >> dist/README.txt
        echo "   Calibrate:`n" >> dist/README.txt
        echo "   amodem.exe recv --calibrate -l path/to/portaudio.dll`n" >> dist/README.txt
        echo "For more options, run:`n" >> dist/README.txt
        echo "amodem.exe --help" >> dist/README.txt
    
    - name: Create release package
      run: |
        Compress-Archive -Path dist/* -DestinationPath amodem-windows.zip
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: amodem-windows
        path: amodem-windows.zip
        compression-level: 9  # 使用最高压缩级别
        retention-days: 30  # 保留30天